<?xml version="1.0" encoding="UTF-8"?>
<project name="custom_rules">

  <target name="javadoc" description="Generate Javadocs" depends="-build-setup">
    <javadoc sourcepath="${source.dir}"
             classpath="${toString:project.all.jars.path}:${toString:project.target.class.path}"
             destdir="${out.dir}/javadoc"
             packagenames="info.guardianproject.cacheword.*"
             windowtitle="${ant.project.name}"
             linkoffline="https://developer.android.com/reference ${sdk.dir}/docs/reference"
             linksource="true"
             doctitle="${ant.project.name}" />
  </target>

  <target name="-getgitdetails" >
    <exec executable="git" outputproperty="git.describe">
      <arg value="describe"/>
    </exec>
    <exec executable="git" outputproperty="git.revision">
      <arg value="rev-parse"/>
      <arg value="HEAD"/>
    </exec>
  </target>

  <target name="-post-build" depends="-getgitdetails">
    <property name="jar.dir" value="." />
    <property name="jar.name" value="${jar.dir}/${ant.project.name}-${git.describe}-debug.jar" />
    <property file="${sdk.dir}/tools/source.properties" />
    <delete file="${jar.name}"/>
    <mkdir dir="${jar.dir}" />
    <jar destfile="${jar.name}"
         includes="info/**"
         basedir="${out.classes.absolute.dir}">
      <manifest>
        <attribute name="Implementation-Vendor" value="Guardian Project"/>
        <attribute name="Implementation-Title" value="CacheWord"/>
        <attribute name="Implementation-URL" value="https://dev.guardianproject.info/projects/cacheword"/>
        <attribute name="Implementation-Version" value="${git.describe}"/>
        <attribute name="Git-Revision" value="${git.revision}"/>
        <attribute name="Android-SDK-Release" value="${Pkg.Revision}"/>
        <attribute name="Android-SDK-Host-OS" value="${Archive.HostOs}"/>
      </manifest>
    </jar>
    <condition property="build.is.release" value="false" else="true">
      <equals arg1="${build.target}" arg2="debug" />
    </condition>
    <if condition="${build.is.release}">
      <then>
        <property name="release.jar.name" value="${jar.dir}/${ant.project.name}-${git.describe}.jar" />
        <delete file="${release.jar.name}.sig"/>
        <move file="${jar.name}" tofile="${release.jar.name}"/>
        <exec executable="gpg" failonerror="false">
          <arg value="--detach-sign" />
          <arg value="${release.jar.name}" />
        </exec>
      </then>
    </if>
  </target>

</project>